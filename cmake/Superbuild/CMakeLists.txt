cmake_minimum_required(VERSION 3.5.1)

if (POLICY CMP0114)
    cmake_policy(SET CMP0114 NEW)
endif()

project(Skribisto-SuperBuild C CXX)

include(ExternalProject)

set(EXTERNAL_INSTALL_LOCATION ${CMAKE_BINARY_DIR}/3rdparty)

if(ANDROID OR IOS)
    message("Selecting IOS / ANDROID")

    ExternalProject_Add(hunspell
#        SOURCE_DIR ../../hunspell
        GIT_REPOSITORY https://github.com/jacquetc/hunspell.git
        GIT_TAG 5e39dffd4e6e51c57f55a867282d3d59ae266b65
        CMAKE_ARGS
        -DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}
        -DCMAKE_C_FLAGS=${CMAKE_C_FLAGS}
        -DCMAKE_MAKE_PROGRAM=${CMAKE_MAKE_PROGRAM}
        -DCMAKE_OSX_ARCHITECTURES=${CMAKE_OSX_ARCHITECTURES}
        -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
        -DCMAKE_INSTALL_PREFIX=${EXTERNAL_INSTALL_LOCATION}/hunspell
        -DHUNSPELL_BUILD_TOOLS:BOOL=false
        -DHUNSPELL_BUILD_STATIC_LIB:BOOL=true
        -DHUNSPELL_BUILD_SHARED_LIB:BOOL=false
        )

else()

    ExternalProject_Add(hunspell
        GIT_REPOSITORY https://github.com/jacquetc/hunspell.git
        GIT_TAG 5e39dffd4e6e51c57f55a867282d3d59ae266b65
        CMAKE_ARGS
        -DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}
        -DCMAKE_C_FLAGS=${CMAKE_C_FLAGS}
        -DCMAKE_MAKE_PROGRAM=${CMAKE_MAKE_PROGRAM}
        -DCMAKE_OSX_ARCHITECTURES=${CMAKE_OSX_ARCHITECTURES}
        -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
        -DCMAKE_INSTALL_PREFIX=${EXTERNAL_INSTALL_LOCATION}/hunspell
        -DHUNSPELL_BUILD_TOOLS:BOOL=false
        -DHUNSPELL_BUILD_STATIC_LIB:BOOL=false
        -DHUNSPELL_BUILD_SHARED_LIB:BOOL=true
        )
endif(ANDROID OR IOS)

set(PKG_HUNSPELL_LIBRARY_DIRS
    ${EXTERNAL_INSTALL_LOCATION}/hunspell/lib
    )

ExternalProject_Add(skribisto
    SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../.."
    CMAKE_ARGS
    -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
    -DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}
    -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
    -DCMAKE_C_FLAGS=${CMAKE_C_FLAGS}
    -DCMAKE_MAKE_PROGRAM=${CMAKE_MAKE_PROGRAM}
    -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
    -DCMAKE_MODULE_PATH=${CMAKE_MODULE_PATH}
    -DCMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}
    -DCMAKE_INSTALL_PREFIX=${CMAKE_BINARY_DIR}/skribisto
    -DCMAKE_OSX_ARCHITECTURES=${CMAKE_OSX_ARCHITECTURES}
    -DHUNSPELL_ROOT:STRING=${EXTERNAL_INSTALL_LOCATION}/hunspell
    -DPKG_HUNSPELL_INCLUDE_DIRS:STRING=${EXTERNAL_INSTALL_LOCATION}/hunspell/include
    -DPKG_HUNSPELL_LIBRARY_DIRS=${PKG_HUNSPELL_LIBRARY_DIRS}
    DEPENDS hunspell
    )


set(CMAKE_MODULE_PATH
    ${CMAKE_CURRENT_SOURCE_DIR}/../3rdparty/
    )
message(${CMAKE_MODULE_PATH})




include(add_ide_support)
target_add_ide_support(skribisto "../../")
